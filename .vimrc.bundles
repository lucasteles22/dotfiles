if &compatible
  set nocompatible
end

" Shim command and function to allow migration from Vundle to vim-plug.
function! VundleToPlug(vundle_command, arg, ...)
  echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin management. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
  let vim_plug_options = {}

  if a:0 > 0
    if has_key(a:1, 'name')
      let name = a:1.name
      let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
    endif

    if has_key(a:1, 'rtp')
      let vim_plug_options.rtp = a:1.rtp
    endif
  endif

  Plug a:arg, vim_plug_options
endfunction

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

" Themes
Plug 'tpope/vim-sensible'
" Plug 'morhetz/gruvbox'
Plug 'flazz/vim-colorschemes'

" Languages and frameworks"
Plug 'mxw/vim-jsx'
Plug 'othree/html5.vim'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'
Plug 'pangloss/vim-javascript'
Plug 'kchmck/vim-coffee-script'
Plug 'elixir-lang/vim-elixir', {'for': ['eelixir', 'elixir']}
Plug 'tpope/vim-endwise', {'for': ['elixir', 'ruby']}
Plug 'posva/vim-vue'
Plug 'janko-m/vim-test'
Plug 'tpope/vim-surround'
Plug 'moll/vim-node'
Plug 'ekalinin/dockerfile.vim'
Plug 'OmniSharp/omnisharp-vim'
Plug 'hashivim/vim-terraform'
Plug 'leafgarland/typescript-vim'
" if has('nvim')
"   Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
" else
"   Plug 'Shougo/deoplete.nvim'
"   Plug 'roxma/nvim-yarp'
"   Plug 'roxma/vim-hug-neovim-rpc'
" endif
" let g:deoplete#enable_at_startup = 1

" Tools
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'airblade/vim-gitgutter'
Plug 'terryma/vim-multiple-cursors'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/vim-easy-align'
Plug 'easymotion/vim-easymotion'
Plug 'mileszs/ack.vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'yggdroot/indentline'
Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'ivalkeen/vim-simpledb'
Plug 'exu/pgsql.vim'
Plug 'tomtom/tcomment_vim'
Plug 'ervandew/supertab'
Plug 'rainerborene/vim-reek'
Plug 'editorconfig/editorconfig-vim'
Plug 'christoomey/vim-run-interactive'
Plug 'editorconfig/editorconfig-vim'
Plug 'ryanoasis/vim-devicons'
Plug 'liuchengxu/vim-clap', { 'do': ':Clap install-binary' }

" Auto complete
" Plug 'ycm-core/YouCompleteMe'

" Lint
Plug 'w0rp/ale'
Plug 'vim-syntastic/syntastic'

" Dependencies of snipmate
" Plug 'MarcWeber/vim-addon-mw-utils'
" Plug 'tomtom/tlib_vim'
" Plug 'honza/vim-snippets'
" Snippets for our use :)
" Plug 'garbas/vim-snipmate'


" Buffer
" Plug 'bling/vim-bufferline'

call plug#end()
